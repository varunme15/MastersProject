package controllers

import play.api._
import play.api.mvc._
import org.apache.spark.SparkConf
import org.apache.spark.SparkContext
import org.apache.spark.SparkContext._
import org.apache.spark.rdd._
import org.apache.spark.mllib.classification.NaiveBayes
import org.apache.spark.mllib.linalg.Vectors
import org.apache.spark.mllib.regression.LabeledPoint
import org.apache.spark.mllib.classification.NaiveBayesModel
import util.Global._;
import play.api.libs.json._
import play.api.libs.ws.WS
import play.api.libs.concurrent.Execution.Implicits.defaultContext
import play.api.Play.current
import scala.collection.mutable.ListBuffer
import com.sun.syndication.feed.synd.{SyndContent, SyndEntry, SyndFeed}
import com.sun.syndication.io.{SyndFeedInput, XmlReader}
import java.net.URL
import java.util.{List => JList}
import scala.collection.JavaConverters._

object Application extends Controller {
  
  def index = Action {
    Ok(views.html.index("Accuracy = %"))
  }
  
  	
 
def feedTitle(company:String) = Action {
 
    val url = "http://finance.yahoo.com/rss/headline?s="+company+""
    val feed: SyndFeed = new SyndFeedInput().build(new XmlReader(new URL(url)))
    val rss_entries = feed.getEntries.asInstanceOf[JList[SyndEntry]].asScala
    var des = new ListBuffer[String]()	
    for(entry <- rss_entries){
        val description = entry.getDescription().getValue().trim();
        if(!description.isEmpty){
	        des += entry.getDescription().getValue();
        }
	}	
    Ok("Feed title: " + des.toString)
    }
    
def twitterFeed(company:String) = Action {
 
    val url = "http://finance.yahoo.com/rss/headline?s="+company+""
    val feed: SyndFeed = new SyndFeedInput().build(new XmlReader(new URL(url)))
    val rss_entries = feed.getEntries.asInstanceOf[JList[SyndEntry]].asScala
    var des = new ListBuffer[String]()	
    for(entry <- rss_entries){
        val description = entry.getDescription().getValue().trim();
        if(!description.isEmpty){
	        des += entry.getDescription().getValue();
        }
	}	
    Ok("Feed title: " + des.toString)
    }
    


}
